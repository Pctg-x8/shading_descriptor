# PureShader Sample Script

!DepthTest !DepthWrite !DepthBounds
Blend (Add SrcAlpha ~SrcAlpha) (Add ~DestAlpha 1)
# Blend (Add SrcAlpha ~SrcAlpha) #(Add SrcAlpha ~SrcAlpha)
# Blend PremultipliedAlpha

VertexShader(pos(POSITION): f4, uv(TEXCOORD0): f2):
  data mat n = matf4 f4[n] | infmatf4 f4[]
  uniform mvp: mf4
  trans x: f4 -> _ =
    let mat = mvp in mat * x
  out _(SV_Position) = trans pos
  out _(TEXCOORD0) = uv

# これ(:かwhere)はどっちでもいい letとかtypeとかと同じブロック規則が適用される
FragmentShader(uv(TEXCOORD0): f2) where
  # descriptor
  uniform texture: sampler2
  # push constant
  constant multiply: f4
  out _(SV_Target) = let mf f = if f > 1 then do f else 1 in texture.sample(uv) * mf multiply
  
data WorkoutResult a b = Ok a | Err b
type c \/ d = WorkoutResult c d
infixl 5 \/
workout t: a -> a \/ Int = if t == 0
  then do
    let v2 = cos 30 + 2
    workout $ 2 * v2
  else Err t
